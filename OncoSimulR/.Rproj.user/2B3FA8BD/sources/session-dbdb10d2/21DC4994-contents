library(shiny)


tabPanelOncoSimulIndiv <-
sidebarLayout(
  sidebarPanel(
    "Attributes",
    navlistPanel(
      widths = c(10, 8),
      tabPanel("allFitnessEffects",
               icon = imageOutput("oncoSimulIndiv_allFitnessEffectsStatus", inline = TRUE)
      ),
      tabPanel("Model",
              icon = imageOutput("oncoSimulIndiv_modelStatus", inline = TRUE)
              ),
      tabPanel("Muation rate",
               icon = imageOutput("oncoSimulIndiv_mutationRateStatus", inline = TRUE)
               ),
      tabPanel("Detection Size",
               icon = imageOutput("oncoSimulIndiv_detectionSizeStatus", inline = TRUE)),
      tabPanel("Detection Drivers",
               icon = imageOutput("oncoSimulIndiv_detectionDriversStatus", inline = TRUE)
               ),
      tabPanel("Init Size",
               icon = imageOutput("oncoSimulIndiv_initSizeStatus", inline = TRUE)
              ),
      tabPanel("Extra Time",
               icon = imageOutput("oncoSimulIndiv_extraTimeStatus", inline = TRUE)
              ),
      tabPanel("Final Time",
               icon = imageOutput("oncoSimulIndiv_finalTimeStatus", inline = TRUE)
              ),
      tabPanel("Maximum Memory",
               icon = imageOutput("oncoSimulIndiv_maxMemoryStatus", inline = TRUE)
              ),
      tabPanel("Maximum Wall Time",
               icon = imageOutput("oncoSimulIndiv_maxWallTimeStatus", inline = TRUE)
              ),
      tabPanel("Maximum Tries",
               icon = imageOutput("oncoSimulIndiv_maxTriesStatus", inline = TRUE)
      )
    )
  ),
  mainPanel(
    # AllFitnessEffects
    tabsetPanel(
      tabPanel(
        "allFitnessEffects Arguments",
        fluidPage(
          #### SELECT INPUT REGION
          h2("Select the Input type to determine the allFitness Object"),
          fluidRow(
            column(
              6,
              radioButtons("oncoSimulIndiv_allFitnessEffectsType", label = "INPUT TYPE", choices = list(
                "Text File" = 1,
                "Fill Data Table" = 2
              ))
            ),
            column(
              6,
              checkboxInput("oncoSimulIndiv_frequencyDepedentFitnessCheckbox", "Frequency dependent fitness")
            )
          ),

          ### INPUT TYPE 1(FILE)
          fluidRow(
            conditionalPanel(
              "input.oncoSimulIndiv_allFitnessEffectsType == 1",
              fluidRow(
                column(
                  6,
                  fileInput("oncoSimulIndiv_allFitnessEffectsFileInput", label = h3("Enter fitness file"), accept=".txt")
                )
              ),
              fluidRow(
                column(
                  6,
                  dataTableOutput("oncoSimulIndiv_allfitnessResultTable")
                )
              )
            )
          ),
          ### INPUT TYPE 2 DT
          fluidRow(
            conditionalPanel(
              "input.oncoSimulIndiv_allFitnessEffectsType == 2",
              ## SELECT DT TYPE
              fluidRow(
                column(
                  10,
                  radioButtons("oncoSimulIndiv_allFitnessEffectsDataTableType", label = "Data Table TYPE", choices = list(
                    "Logical Truth Table Format" = 1,
                    "Raw Format" = 2
                  ))
                )
              ),
              fluidRow(
                ## DT TYPE 1 REGION
                conditionalPanel(
                  "input.oncoSimulIndiv_allFitnessEffectsDataTableType == 1",
                  fluidRow(
                    column(
                      6,
                      numericInput("oncoSimulIndiv_NumGenes", "Enter number of Genes(max 10)", value = 1, min = 1, max = 10)
                    )
                  )
                )
              ),
              fluidRow(
                # DT TYPE REGION 2
                conditionalPanel(
                  "input.oncoSimulIndiv_allFitnessEffectsDataTableType == 2",
                  fluidRow(
                    column(
                      6,
                      numericInput("oncoSimulIndiv_NumRowsDataTableOpt2", "Enter number of Rows", value = 1, min = 1)
                    )
                  )
                )
              ),
              fluidRow(
                column(12,
                  DTOutput("allFitnessEffectsDTEditable"),
                  height = "100"
                )
              )
            )
          )
        )
      ),
      tabPanel(
        "oncoSimulIndiv Arguments",
        fluidPage(
          fluidRow(
            column(
              6,
              selectInput("oncoSimulIndiv_selectModel",
                label = h3("Select Model"),
                choices = list(
                  "Bozic", "Exp",
                  "Arb", "McFL", "McFLD", ""
                ), selected = ""
              ),
            )
          )
        ),
        fluidRow(
          column(
            6,
            numericInput("oncoSimulIndiv_mutationRate", h3("Mutation Rate"),
              value = 1E-6
            ),
            numericInput("oncoSimulIndiv_detectionSize", h3("Detection Size"),
              value = "NA"
            ),
            numericInput("oncoSimulIndiv_detectionDrivers", h3("Detection Drivers"),
              value = "NA"
            ),
          ),
          column(
            6,
            numericInput("oncoSimulIndiv_initSize", h3("Init Size"),
              value = 500
            ),
            numericInput("oncoSimulIndiv_extraTime", h3("Extra Time"),
              value = 0
            ),
            numericInput("oncoSimulIndiv_finalTime", h3("Final Time"),
              value = 2000
            )
          )
        ),
        fluidRow(
          column(
            6,
            checkboxInput("oncoSimulIndiv_onlyCancer", h3("Only Cancer"),
              value = TRUE
            ),
            checkboxInput("oncoSimulIndiv_mutationPropGrowth", h3("Mutation Proprotional to Growth"),
              value = FALSE
            ),
            checkboxInput("oncoSimulIndiv_errorHitMaxTries", h3("errorHitMaxTries"),
              value = TRUE
            ),
            checkboxInput("oncoSimulIndiv_errorHitWallTime", h3("Error Hit Wall Time"),
              value = TRUE
            ),
            checkboxInput("oncoSimulIndiv_AND_DrvProbExit", h3("AND Condition to reach cancer"),
              value = TRUE
            )
          ),
          column(
            6,
            numericInput("oncoSimulIndiv_maxMemory", h3("Maximum Memory"),
              value = 2000
            ),
            numericInput("oncoSimulIndiv_maxWallTime", h3("Maximum Wall Time"),
              value = 200
            ),
            numericInput("oncoSimulIndiv_maxNumTries", h3("Maximum Tries"),
              value = 500
            ),
            numericInput("oncoSimulIndiv_verbosity", h3("Verbosity"),
              value = 0
            )
          )
        )
      ),
      tabPanel(
        "Plot",
        fluidPage(
          sidebarPanel(
            selectInput("oncoSimulIndiv_plotType", "Plot type", choices = list("line", "stacked", "stream")),
            selectInput("oncoSimulIndiv_plotShow", "Plot Show", choice = list("genotypes", "drivers")),
            textInput("oncoSimulIndiv_plotTitle", "Plot Title")
          ),
          fluidRow(
            column(
              6,
              actionButton("oncoSimulIndiv_runExecutionButton", h4("Run Execution of oncoSimulIndiv"))
            )
          ),
          fluidRow(plotOutput("oncoSimulIndiv_plot")),
          fluidRow(downloadButton(outputId = "oncoSimulIndiv_down", label = "Download the plot"))
        )
      )
    )
  )
)
